{"ast":null,"code":"import { DECREMENT, INCREMENT, RESET } from \"./action-types\";\nconst initialState = {\n  count: 0\n};\nexport const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INCREMENT:\n      return { ...state,\n        count: state.count + action.payload\n      };\n\n    case DECREMENT:\n      return { ...state,\n        count: state.count - action.payload\n      };\n\n    case RESET:\n      return { ...state,\n        count: 0\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["DECREMENT","INCREMENT","RESET","initialState","count","reducer","state","action","type","payload"],"sources":["/Users/musubimanagement/Desktop/Counter_app-main/src/component/redux/reducer.js"],"sourcesContent":["import { DECREMENT, INCREMENT, RESET } from \"./action-types\"\n\nconst initialState={\n    count:0\n}\n\nexport const reducer=(state=initialState,action)=>{\nswitch(action.type){\n    case INCREMENT:\n        return{\n            ...state,\n            count:state.count+action.payload\n        }\n    case DECREMENT:\n        return{\n            ...state,\n            count:state.count-action.payload\n        }\n    case RESET:\n        return{\n            ...state,\n            count:0\n        }\n    default:\n        return state\n}\n}"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,SAApB,EAA+BC,KAA/B,QAA4C,gBAA5C;AAEA,MAAMC,YAAY,GAAC;EACfC,KAAK,EAAC;AADS,CAAnB;AAIA,OAAO,MAAMC,OAAO,GAAC,YAA6B;EAAA,IAA5BC,KAA4B,uEAAtBH,YAAsB;EAAA,IAATI,MAAS;;EAClD,QAAOA,MAAM,CAACC,IAAd;IACI,KAAKP,SAAL;MACI,OAAM,EACF,GAAGK,KADD;QAEFF,KAAK,EAACE,KAAK,CAACF,KAAN,GAAYG,MAAM,CAACE;MAFvB,CAAN;;IAIJ,KAAKT,SAAL;MACI,OAAM,EACF,GAAGM,KADD;QAEFF,KAAK,EAACE,KAAK,CAACF,KAAN,GAAYG,MAAM,CAACE;MAFvB,CAAN;;IAIJ,KAAKP,KAAL;MACI,OAAM,EACF,GAAGI,KADD;QAEFF,KAAK,EAAC;MAFJ,CAAN;;IAIJ;MACI,OAAOE,KAAP;EAjBR;AAmBC,CApBM"},"metadata":{},"sourceType":"module"}